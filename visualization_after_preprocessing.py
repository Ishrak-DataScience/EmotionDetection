# -*- coding: utf-8 -*-
"""Visualization_after_Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uRx9r3mEYsQc3F71KMGBPGXca3UaJERM
"""

import os
import pandas as pd

# Updated file path
file_path = "/content/drive/MyDrive/TUD Master/LLM/final_dataset.csv"

# Updated emotion labels including 'Disgust'
emotion_columns = ['Anger', 'Fear', 'Joy', 'Sadness', 'Surprise', 'Disgust']

# Initialize emotion_summary_df to None before the try block
emotion_summary_df = None

try:
    df = pd.read_csv(file_path)

    for col in emotion_columns:
        if col.lower() not in [c.lower() for c in df.columns]:
            df[col] = 0  # Add missing columns with default value 0
        else:
            correct_col = next((c for c in df.columns if c.lower() == col.lower()), None)
            if correct_col and correct_col != col:
                df.rename(columns={correct_col: col}, inplace=True)

    df['Neutral'] = (df[emotion_columns].sum(axis=1) == 0).astype(int)

    emotion_counts = df[emotion_columns + ['Neutral']].sum()
    total_count = emotion_counts.sum()

    emotion_data = {
        'Language_Name': 'English',
        'Language': 'eng',
        **emotion_counts.to_dict(),
        'Total': total_count
    }

    emotion_summary_df = pd.DataFrame([emotion_data])
    emotion_summary_df = emotion_summary_df.set_index('Language')

    # Save DataFrame to CSV file (Uncomment if you want to save the output)
    # output_path = "/content/drive/MyDrive/TUD Master/LLM/ProjectVisualization/Final/AfterNewDataAndTranslation/emotion_summary_final.csv"
    # emotion_summary_df.to_csv(output_path, index=True)

    # print("English emotion summary saved successfully.")

except FileNotFoundError:
    print(f"File not found: {file_path}")
except Exception as e:
    print(f"An error occurred while processing the dataset: {e}")

# Now emotion_summary_df will be either the DataFrame or None
emotion_summary_df

import matplotlib.pyplot as plt

# Select only the relevant emotion columns
emotion_columns = ["Anger", "Fear", "Joy", "Sadness", "Surprise", "Neutral"]
emotion_totals = emotion_summary_df[emotion_columns].sum()

# Define colors for each emotion
colors = ["red", "blue", "green", "purple", "orange", "gray"]

# Plot emotion representation
plt.figure(figsize=(12, 6))
emotion_totals.plot(kind="bar", color=colors, edgecolor='black')
plt.title("English Emotion Representation (eng.csv)")
plt.xlabel("Emotions")
plt.ylabel("Total Count")
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns

# Select only the relevant emotion columns
emotion_columns = ["Anger", "Fear", "Joy", "Sadness", "Surprise", "Neutral"]
emotion_totals = emotion_summary_df[emotion_columns].sum()

# Define colors for each emotion
colors = sns.color_palette("husl", len(emotion_columns))

# Plot emotion representation using a horizontal bar chart
plt.figure(figsize=(12, 6))
plt.barh(emotion_columns, emotion_totals, color=colors, edgecolor='black')
plt.title("English Emotion Representation (eng.csv)", fontsize=14, fontweight='bold')
plt.xlabel("Total Count", fontsize=12)
plt.ylabel("Emotions", fontsize=12)
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.gca().invert_yaxis()  # Invert the y-axis for better readability

# Add values on bars
for index, value in enumerate(emotion_totals):
    plt.text(value + 50, index, str(value), fontsize=12, va='center', fontweight='bold')

plt.show()

import matplotlib.pyplot as plt
import seaborn as sns

# Select only the relevant emotion columns
emotion_columns = ["Anger", "Fear", "Joy", "Sadness", "Surprise", "Neutral"]
emotion_totals = emotion_summary_df[emotion_columns].sum()

# Define colors for each emotion
colors = sns.color_palette("pastel", len(emotion_columns))

# Plot emotion representation using a pie chart
plt.figure(figsize=(8, 8))
plt.pie(emotion_totals, labels=emotion_columns, autopct='%1.1f%%', colors=colors, startangle=140, wedgeprops={'edgecolor': 'black'})
plt.title("English Emotion Distribution (eng.csv)", fontsize=14, fontweight='bold')
plt.show()